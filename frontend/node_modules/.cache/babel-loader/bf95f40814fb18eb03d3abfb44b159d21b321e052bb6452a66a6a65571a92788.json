{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/images/Logo.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-bb50a5e4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"app-header\"\n};\nconst _hoisted_2 = {\n  class: \"image-container\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"text-overlay\"\n};\nconst _hoisted_5 = {\n  class: \"animated-title\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeaderUserButton = _resolveComponent(\"AppHeaderUserButton\");\n  return _openBlock(), _createElementBlock(\"header\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    class: \"button-image-logo\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.handleLogoClick && $options.handleLogoClick(...args)),\n    src: _imports_0,\n    alt: \"Button\"\n  }), _createElementVNode(\"img\", {\n    class: \"image\",\n    src: $data.imageUrl,\n    alt: \"Image\"\n  }, null, 8 /* PROPS */, _hoisted_3), _createCommentVNode(\" Use the v-if directive to show the user button only if the user is logged in \"), _createVNode(_component_AppHeaderUserButton, {\n    logged: $props.logged,\n    username: $props.username,\n    email: $props.email,\n    password: $props.password\n  }, null, 8 /* PROPS */, [\"logged\", \"username\", \"email\", \"password\"]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", _hoisted_5, _toDisplayString($data.title), 1 /* TEXT */)])])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$options","handleLogoClick","src","alt","$data","imageUrl","_createCommentVNode","_createVNode","_component_AppHeaderUserButton","logged","$props","username","email","password","_hoisted_4","_hoisted_5","_toDisplayString","title"],"sources":["C:\\Users\\Usuario\\Desktop\\Adri\\UB\\4º\\1º\\Ingeniería de Software\\Practica\\RecipeSharing\\frontend\\src\\components\\AppHeader.vue"],"sourcesContent":["<template>\n    <header class=\"app-header\">\n        <div class=\"image-container\">\n            <img class=\"button-image-logo\" @click=\"handleLogoClick\" src=\"../assets/images/Logo.png\" alt=\"Button\">\n            <img class=\"image\" :src=\"imageUrl\" alt=\"Image\">\n            <!-- Use the v-if directive to show the user button only if the user is logged in -->\n            <AppHeaderUserButton :logged=\"logged\" :username=\"username\" :email=\"email\" :password=\"password\"/>\n            <div class=\"text-overlay\">\n                <p class=\"animated-title\">{{ title }}</p>\n            </div>\n        </div>\n    </header>\n</template>\n\n<script>\n\nimport AppHeaderUserButton from \"@/components/AppHeaderUserButton.vue\";\n\nexport default {\n    props: {\n        logged: Boolean,\n        username: String,\n        email: String,\n        password: String,\n    },\n    components: {\n        AppHeaderUserButton,\n    },\n    data() {\n        return {\n            title: \"Chef's Nook\",\n            imageUrl: require(\"../assets/images/HeaderImage.jpg\"),\n        };\n    },\n    methods: {\n        handleLogoClick() {\n            // Logic for the logo click\n            // You can use Vue Router to navigate to the main page:\n            this.$router.push('/');\n        },\n    },\n};\n\n</script>\n\n<style scoped>\n\n.app-header {\n    width: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 999;\n}\n\n.image-container {\n    position: relative;\n    height: 100px;\n}\n\n.image {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n}\n\n.text-overlay {\n    position: absolute;\n    top: 0;\n    left: 300px;\n    width: 50%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.text-overlay p {\n    color: #fff;\n    font-style: oblique;\n    font-size: 1cm;\n    text-align: center;\n}\n\n.animated-title {\n    color: #fff;\n    font-size: 24px;\n    animation: bounce 10s infinite;\n}\n\n@keyframes bounce {\n    0%, 20%, 50%, 80%, 100% {\n        transform: translateY(0);\n    }\n    40% {\n        transform: translateY(-20px);\n    }\n    60% {\n        transform: translateY(-10px);\n    }\n}\n\n.button-image-logo {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 70px;\n    margin-top: 12px;\n    margin-left: 20px;\n    border-radius: 50%;\n}\n\n</style>\n"],"mappings":";OAGoEA,UAA+B;;;EAFvFC,KAAK,EAAC;AAAY;;EACjBA,KAAK,EAAC;AAAiB;;;EAKnBA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAgB;;;uBAPrCC,mBAAA,CAUS,UAVTC,UAUS,GATLC,mBAAA,CAQM,OARNC,UAQM,GAPFD,mBAAA,CAAqG;IAAhGH,KAAK,EAAC,mBAAmB;IAAEK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;IAAEG,GAA+B,EAA/BX,UAA+B;IAACY,GAAG,EAAC;MAC5FR,mBAAA,CAA+C;IAA1CH,KAAK,EAAC,OAAO;IAAEU,GAAG,EAAEE,KAAA,CAAAC,QAAQ;IAAEF,GAAG,EAAC;uCACvCG,mBAAA,kFAAqF,EACrFC,YAAA,CAAgGC,8BAAA;IAA1EC,MAAM,EAAEC,MAAA,CAAAD,MAAM;IAAGE,QAAQ,EAAED,MAAA,CAAAC,QAAQ;IAAGC,KAAK,EAAEF,MAAA,CAAAE,KAAK;IAAGC,QAAQ,EAAEH,MAAA,CAAAG;wEACrFlB,mBAAA,CAEM,OAFNmB,UAEM,GADFnB,mBAAA,CAAyC,KAAzCoB,UAAyC,EAAAC,gBAAA,CAAZZ,KAAA,CAAAa,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}