{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    options: Array,\n    // List of options grouped by category\n    selectedValue: Array,\n    // Change the prop type to Array for multiple selections\n    label: String,\n    // Label for the select dropdown\n    groupTitle: String,\n    // Title for the selected group\n    choose: Boolean\n  },\n  data() {\n    return {\n      localSelectedValue: this.selectedValue,\n      // Use a local value to bind to the select\n      selectedOptions: [] // List to store selected items\n    };\n  },\n\n  methods: {\n    addSelectedOption() {\n      const selectedValue = this.localSelectedValue;\n      // Check if the selected value is valid and not already selected\n      if (this.choose == false) {\n        this.selectedOptions = [];\n      }\n      if (selectedValue && !this.selectedOptions.includes(selectedValue)) {\n        this.selectedOptions.push(selectedValue);\n        this.$emit('update:selectedValue', this.selectedOptions);\n      }\n    },\n    removeSelectedOption(index) {\n      this.selectedOptions.splice(index, 1);\n    }\n  }\n};","map":{"version":3,"names":["props","options","Array","selectedValue","label","String","groupTitle","choose","Boolean","data","localSelectedValue","selectedOptions","methods","addSelectedOption","includes","push","$emit","removeSelectedOption","index","splice"],"sources":["C:\\Users\\Usuario\\Desktop\\Adri\\UB\\4º\\1º\\Ingeniería de Software\\Practica\\RecipeSharing\\frontend\\src\\components\\AppDropdownSelect.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <!-- Dropdown select to choose options -->\n        <select @change=\"addSelectedOption\" class=\"full-width-dropdown\" v-model=\"localSelectedValue\">\n            <option value=\"\" disabled>Select {{ label }}</option>\n            <optgroup v-for=\"group in options\" :label=\"group.groupName\" :key=\"group.groupName\">\n                <option v-for=\"option in group.options\" :value=\"option\" :key=\"option\">{{ option }}</option>\n            </optgroup>\n        </select>\n\n        <!-- Display selected values and allow removal -->\n        <div class=\"selected-values\">\n            <h2 class=\"selected-ingredients-title\">{{ groupTitle }}</h2>\n            <button class=\"selected-value\" v-for=\"(selected, index) in selectedOptions\" :key=\"index\"\n                    @click=\"removeSelectedOption(index)\">\n                {{ selected }} <span class=\"remove-button\">✖</span>\n            </button>\n        </div>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    props: {\n        options: Array, // List of options grouped by category\n        selectedValue: Array, // Change the prop type to Array for multiple selections\n        label: String, // Label for the select dropdown\n        groupTitle: String, // Title for the selected group\n        choose: Boolean\n    },\n    data() {\n        return {\n            localSelectedValue: this.selectedValue, // Use a local value to bind to the select\n            selectedOptions: [], // List to store selected items\n        };\n    },\n    methods: {\n        addSelectedOption() {\n            const selectedValue = this.localSelectedValue;\n            // Check if the selected value is valid and not already selected\n            if (this.choose == false) {\n                this.selectedOptions = [];\n            }\n            if (selectedValue && !this.selectedOptions.includes(selectedValue)) {\n                this.selectedOptions.push(selectedValue);\n                this.$emit('update:selectedValue', this.selectedOptions);\n            }\n        },\n        removeSelectedOption(index) {\n            this.selectedOptions.splice(index, 1);\n        },\n    },\n};\n\n</script>\n\n<style scoped>\n\n.container {\n    background-color: #FCE4A4;\n    margin: 2px 5px;\n    padding: 10px;\n    border-radius: 10px;\n}\n\n.remove-button {\n    cursor: pointer;\n    margin-left: 10px;\n}\n\n.selected-ingredients-title {\n    font-size: 16px;\n    margin-bottom: 2px;\n}\n\n</style>"],"mappings":";AAuBA,eAAe;EACXA,KAAK,EAAE;IACHC,OAAO,EAAEC,KAAK;IAAE;IAChBC,aAAa,EAAED,KAAK;IAAE;IACtBE,KAAK,EAAEC,MAAM;IAAE;IACfC,UAAU,EAAED,MAAM;IAAE;IACpBE,MAAM,EAAEC;EACZ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,kBAAkB,EAAE,IAAI,CAACP,aAAa;MAAE;MACxCQ,eAAe,EAAE,EAAE,CAAE;IACzB,CAAC;EACL,CAAC;;EACDC,OAAO,EAAE;IACLC,iBAAiBA,CAAA,EAAG;MAChB,MAAMV,aAAY,GAAI,IAAI,CAACO,kBAAkB;MAC7C;MACA,IAAI,IAAI,CAACH,MAAK,IAAK,KAAK,EAAE;QACtB,IAAI,CAACI,eAAc,GAAI,EAAE;MAC7B;MACA,IAAIR,aAAY,IAAK,CAAC,IAAI,CAACQ,eAAe,CAACG,QAAQ,CAACX,aAAa,CAAC,EAAE;QAChE,IAAI,CAACQ,eAAe,CAACI,IAAI,CAACZ,aAAa,CAAC;QACxC,IAAI,CAACa,KAAK,CAAC,sBAAsB,EAAE,IAAI,CAACL,eAAe,CAAC;MAC5D;IACJ,CAAC;IACDM,oBAAoBA,CAACC,KAAK,EAAE;MACxB,IAAI,CAACP,eAAe,CAACQ,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACzC;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}