{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport '../assets/styles/appStyles.css';\nimport AppTextField from \"@/components/AppTextField.vue\";\nimport axios from 'axios';\nimport AppTextFieldPassword from \"@/components/AppTextFieldPassword.vue\";\nexport default {\n  name: \"LoginPage\",\n  components: {\n    AppTextFieldPassword,\n    AppTextField\n  },\n  data() {\n    return {\n      // Data properties for username, email, password, and more\n      usernameOrEmail: \"\",\n      password: \"\",\n      username: \"\",\n      email: \"\",\n      defaultMessageUsernameOrEmail: \"Enter your username or email\",\n      defaultMessagePassword: \"Enter your password\",\n      logged: false // A flag to indicate if the user is logged in\n    };\n  },\n\n  methods: {\n    async login() {\n      // Determine if the input is an email or username\n      if (this.usernameOrEmail === 0 || this.password.length === 0) {\n        alert(\"Complete the form\");\n        return;\n      }\n      let loginIdentifier = this.usernameOrEmail;\n      if (loginIdentifier.match(/^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/)) {\n        // If it matches the email format, set it as an email\n        this.email = loginIdentifier;\n      } else {\n        // Otherwise, set it as a username\n        this.username = loginIdentifier;\n      }\n      try {\n        let response = await axios.post('/login/', {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.status === 200) {\n          // Successful login, perform necessary actions\n          alert(\"Logged!\"); // Display a success message\n          this.logged = true; // Set the logged flag to true\n          localStorage.setItem('logged', this.logged); // Store the logged status in local storage\n          localStorage.setItem('username', this.username);\n          this.$emit('login-success', this.logged); // Emit a custom event indicating login success\n          this.$emit('username-success', this.username);\n          this.$emit('email-success', this.email);\n          this.$emit('password-success', this.password);\n          this.$router.push('/'); // Redirect to the home page\n        }\n      } catch (error) {\n        if (error.response) {\n          // Handle login failure (e.g., display an error message).\n          if (error.response.status === 400) {\n            alert(error.response.data.error);\n          } else if (error.response.status === 500) {\n            alert(\"An error occurred while registering.\");\n          } else {\n            // Handle other status codes\n            alert(\"Unexpected error\");\n          }\n        } else {\n          // Handle other errors.\n          console.error(\"An error occurred while logging in.\");\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["AppTextField","axios","AppTextFieldPassword","name","components","data","usernameOrEmail","password","username","email","defaultMessageUsernameOrEmail","defaultMessagePassword","logged","methods","login","length","alert","loginIdentifier","match","response","post","headers","status","localStorage","setItem","$emit","$router","push","error","console"],"sources":["C:\\Users\\Usuario\\Desktop\\Adri\\UB\\4º\\1º\\Ingeniería de Software\\Practica\\RecipeSharing\\frontend\\src\\pages\\LoginPage.vue"],"sourcesContent":["<template>\n    <div class=\"mainContainer\" style=\"color: black\">\n        <div class=\"form-background\">\n            <div class=\"mainTitle\">\n                <!-- Main title for the login page with custom color -->\n                <h1 style=\"color: #ff5733\">Login</h1>\n            </div>\n            <form @submit.prevent=\"login\" class=\"form\">\n                <div class=\"form-group\">\n                    <label for=\"usernameOrEmail\">Username or Email:</label>\n                    <!-- AppTextField component for username or email input -->\n                    <AppTextField\n                            :defaultMessage=\"defaultMessageUsernameOrEmail\"\n                            @update:textValue=\"usernameOrEmail = $event\"\n                    />\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password:</label>\n                    <!-- AppTextFieldPassword component for password input -->\n                    <AppTextFieldPassword\n                            :defaultMessage=\"defaultMessagePassword\"\n                            @update:textValue=\"password = $event\"\n                    />\n                </div>\n                <p>\n                    <!-- Router link to navigate to the registration page if the user doesn't have an account -->\n                    <router-link to=\"/register\">Don't have an account? Register here</router-link>\n                </p>\n                <div class=\"secondaryContainer\" style=\"background-color: white\">\n                    <!-- Login button to submit the form -->\n                    <button type=\"submit\" class=\"submit-button\">Login</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\n\nimport '../assets/styles/appStyles.css';\nimport AppTextField from \"@/components/AppTextField.vue\";\nimport axios from 'axios';\nimport AppTextFieldPassword from \"@/components/AppTextFieldPassword.vue\"\n\nexport default {\n    name: \"LoginPage\",\n    components: {AppTextFieldPassword, AppTextField},\n    data() {\n        return {\n            // Data properties for username, email, password, and more\n            usernameOrEmail: \"\",\n            password: \"\",\n            username: \"\",\n            email: \"\",\n            defaultMessageUsernameOrEmail: \"Enter your username or email\",\n            defaultMessagePassword: \"Enter your password\",\n            logged: false, // A flag to indicate if the user is logged in\n        };\n    },\n    methods: {\n        async login() {\n            // Determine if the input is an email or username\n            if (this.usernameOrEmail === 0 || this.password.length === 0) {\n                alert(\"Complete the form\");\n                return;\n            }\n            let loginIdentifier = this.usernameOrEmail;\n            if (loginIdentifier.match(/^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/)) {\n                // If it matches the email format, set it as an email\n                this.email = loginIdentifier;\n            } else {\n                // Otherwise, set it as a username\n                this.username = loginIdentifier;\n            }\n\n            try {\n                let response = await axios.post('/login/', {\n                    username: this.username,\n                    email: this.email,\n                    password: this.password,\n                }, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                if (response.status === 200) {\n                    // Successful login, perform necessary actions\n                    alert(\"Logged!\") // Display a success message\n                    this.logged = true; // Set the logged flag to true\n                    localStorage.setItem('logged', this.logged); // Store the logged status in local storage\n                    localStorage.setItem('username', this.username);\n                    this.$emit('login-success', this.logged); // Emit a custom event indicating login success\n                    this.$emit('username-success', this.username);\n                    this.$emit('email-success', this.email);\n                    this.$emit('password-success', this.password);\n                    this.$router.push('/'); // Redirect to the home page\n                }\n            } catch (error) {\n                if (error.response) {\n                    // Handle login failure (e.g., display an error message).\n                    if (error.response.status === 400) {\n                        alert(error.response.data.error);\n                    } else if (error.response.status === 500) {\n                        alert(\"An error occurred while registering.\");\n                    } else {\n                        // Handle other status codes\n                        alert(\"Unexpected error\");\n                    }\n                } else {\n                    // Handle other errors.\n                    console.error(\"An error occurred while logging in.\");\n                }\n            }\n        },\n    }\n};\n\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":";AAuCA,OAAO,gCAAgC;AACvC,OAAOA,YAAW,MAAO,+BAA+B;AACxD,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,oBAAmB,MAAO,uCAAsC;AAEvE,eAAe;EACXC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IAACF,oBAAoB;IAAEF;EAAY,CAAC;EAChDK,IAAIA,CAAA,EAAG;IACH,OAAO;MACH;MACAC,eAAe,EAAE,EAAE;MACnBC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,6BAA6B,EAAE,8BAA8B;MAC7DC,sBAAsB,EAAE,qBAAqB;MAC7CC,MAAM,EAAE,KAAK,CAAE;IACnB,CAAC;EACL,CAAC;;EACDC,OAAO,EAAE;IACL,MAAMC,KAAKA,CAAA,EAAG;MACV;MACA,IAAI,IAAI,CAACR,eAAc,KAAM,KAAK,IAAI,CAACC,QAAQ,CAACQ,MAAK,KAAM,CAAC,EAAE;QAC1DC,KAAK,CAAC,mBAAmB,CAAC;QAC1B;MACJ;MACA,IAAIC,eAAc,GAAI,IAAI,CAACX,eAAe;MAC1C,IAAIW,eAAe,CAACC,KAAK,CAAC,kDAAkD,CAAC,EAAE;QAC3E;QACA,IAAI,CAACT,KAAI,GAAIQ,eAAe;MAChC,OAAO;QACH;QACA,IAAI,CAACT,QAAO,GAAIS,eAAe;MACnC;MAEA,IAAI;QACA,IAAIE,QAAO,GAAI,MAAMlB,KAAK,CAACmB,IAAI,CAAC,SAAS,EAAE;UACvCZ,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBF,QAAQ,EAAE,IAAI,CAACA;QACnB,CAAC,EAAE;UACCc,OAAO,EAAE;YACL,cAAc,EAAE;UACpB;QACJ,CAAC,CAAC;QAEF,IAAIF,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UACzB;UACAN,KAAK,CAAC,SAAS,GAAE;UACjB,IAAI,CAACJ,MAAK,GAAI,IAAI,EAAE;UACpBW,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAACZ,MAAM,CAAC,EAAE;UAC7CW,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAChB,QAAQ,CAAC;UAC/C,IAAI,CAACiB,KAAK,CAAC,eAAe,EAAE,IAAI,CAACb,MAAM,CAAC,EAAE;UAC1C,IAAI,CAACa,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAACjB,QAAQ,CAAC;UAC7C,IAAI,CAACiB,KAAK,CAAC,eAAe,EAAE,IAAI,CAAChB,KAAK,CAAC;UACvC,IAAI,CAACgB,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAClB,QAAQ,CAAC;UAC7C,IAAI,CAACmB,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;QAC5B;MACJ,EAAE,OAAOC,KAAK,EAAE;QACZ,IAAIA,KAAK,CAACT,QAAQ,EAAE;UAChB;UACA,IAAIS,KAAK,CAACT,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;YAC/BN,KAAK,CAACY,KAAK,CAACT,QAAQ,CAACd,IAAI,CAACuB,KAAK,CAAC;UACpC,OAAO,IAAIA,KAAK,CAACT,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;YACtCN,KAAK,CAAC,sCAAsC,CAAC;UACjD,OAAO;YACH;YACAA,KAAK,CAAC,kBAAkB,CAAC;UAC7B;QACJ,OAAO;UACH;UACAa,OAAO,CAACD,KAAK,CAAC,qCAAqC,CAAC;QACxD;MACJ;IACJ;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}