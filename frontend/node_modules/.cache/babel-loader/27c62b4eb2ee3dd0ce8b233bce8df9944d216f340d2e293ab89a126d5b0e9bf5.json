{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport '../assets/styles/appStyles.css';\nexport default {\n  props: {\n    recipe: Object,\n    username: String,\n    logged: Boolean,\n    type: String\n  },\n  data() {\n    return {\n      showPopup: false,\n      rating: 0,\n      // Valoración inicial\n      NumRatings: this.recipe.rating_amount,\n      CurrRating: this.recipe.rating_average,\n      recipe_id: this.recipe.id,\n      hoveredStar: 0\n    };\n  },\n  methods: {\n    togglePopup() {\n      this.showPopup = !this.showPopup;\n    },\n    goToLogin() {\n      alert('Log in to see the recipe!');\n      this.$router.push('/login');\n    },\n    parseText(listString) {\n      const sinCorchetes = listString.replace(/\\[|\\]/g, '');\n      const sinComillasSimples = sinCorchetes.replace(/'/g, '');\n      const arrayIngredientes = sinComillasSimples.split(',');\n      return arrayIngredientes;\n    },\n    setRating(rating) {\n      this.rating = rating;\n      this.addRating();\n      this.getRating();\n    },\n    hoverStars(star) {\n      this.hoveredStar = star;\n    },\n    resetStars() {\n      this.hoveredStar = 0;\n    },\n    getRating() {\n      // Axios para recibir los ratings\n      axios;\n      axios.get(`recipes/getratings/${this.recipe_id}/`).then(response => {\n        if (response.status === 200) {\n          const ratings = response.data;\n          this.NumRatings = ratings.rating_amount;\n          this.CurrRating = ratings.rating_average;\n          console.log(response.data.recipes);\n        }\n      }).catch(error => {\n        console.error(\"Error al obtener los ratings:\", error);\n      });\n    },\n    addRating() {\n      //axios para postear el rating de una receta\n      axios.post(\"recipes/postratings/\", {\n        user_id: this.username,\n        recipe_id: this.recipe.id,\n        rating: this.rating\n      }).then(response => {\n        if (response.status === 200) {\n          console.log(\"Rating added\");\n          alert(\"Rating added.\");\n          this.getRating();\n        }\n      }).catch(error => {\n        alert(error.response);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","props","recipe","Object","username","String","logged","Boolean","type","data","showPopup","rating","NumRatings","rating_amount","CurrRating","rating_average","recipe_id","id","hoveredStar","methods","togglePopup","goToLogin","alert","$router","push","parseText","listString","sinCorchetes","replace","sinComillasSimples","arrayIngredientes","split","setRating","addRating","getRating","hoverStars","star","resetStars","get","then","response","status","ratings","console","log","recipes","catch","error","post","user_id"],"sources":["C:\\Users\\Usuario\\Desktop\\Adri\\UB\\4º\\1º\\Ingeniería de Software\\Practica\\RecipeSharing\\frontend\\src\\components\\AppCardRecipe.vue"],"sourcesContent":["<template>\n    <div class=\"recipe-card\">\n        <div v-if=\"logged\">\n            <div @click=\"togglePopup\" class=\"recipe-title\">\n                <span v-if=\"type === 'rate'\">\n                  <h2>{{ this.recipe.title }}</h2><h3>{{ 'Rating: ' + this.CurrRating }}</h3>\n                </span>\n                <span v-else>\n                  <h2>{{ this.recipe.title }}</h2><h3>{{ this.recipe.creation_date }}</h3>\n                </span>\n            </div>\n            <div v-if=\"showPopup\" class=\"popup\">\n            <div class=\"popup-content\">\n                <div class=\"scrollable-content\">\n                    <div class=\"recipe-header\">\n                        <div class=\"recipe-card-title\">\n                            <h2>{{ \"Title: \" + this.recipe.title }}</h2>\n                            <p><strong>Creation Date:</strong> {{ this.recipe.creation_date }}</p>\n                        </div>\n                        <div class=\"recipe-card-rating\">\n                            <div class=\"recipe-card-rating-title\">\n                                <h3>Current Rating</h3>\n                                <p>{{ this.CurrRating + \" from \" + this.NumRatings + \" ratings\" }}</p>\n                            </div>\n                            <div class=\"rating-stars\">\n                                <span v-if=\"username !== this.recipe.username_id\"   >\n                                    <h3>Add your rating:</h3>\n                                </span>\n                                <span\n                                            v-for=\"star in [1, 2, 3, 4, 5]\"\n                                            :key=\"star\"\n                                            @click=\"setRating(star)\"\n                                            @mouseover=\"hoverStars(star)\"\n                                            @mouseout=\"resetStars\"\n                                            :class=\"{ 'filled': star <= rating, 'hovered': star <= hoveredStar, 'hidden-stars': username === this.recipe.username_id }\"\n                                >\n                                    ★\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"section\">\n                        <div class=\"recipe-card-section\">\n                            <h3>Ingredients</h3>\n                            <ul>\n                                <li v-for=\"(step, index) in this.parseText(this.recipe.ingredients)\" :key=\"index\">\n                                    {{ step }}\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div class=\"section\">\n                        <div class=\"recipe-card-section\">\n                            <h3>Instructions</h3>\n                            <ol>\n                                <li v-for=\"(step, index) in this.recipe.instructions.split('\\n')\" :key=\"index\">\n                                    {{ step }}\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n                    <div class=\"section\">\n                        <div class=\"recipe-card-section\">\n                            <h3>Allergens</h3>\n                            <ul>\n                                <li v-for=\"(step, index) in this.parseText(this.recipe.allergens)\" :key=\"index\">\n                                    {{ step }}\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div class=\"section\">\n                        <div class=\"recipe-card-section\">\n                            <h3>Type</h3> {{ this.recipe.recipe_type }}\n                        </div>\n                    </div>\n                    <div class=\"section\">\n                        <div class=\"recipe-card-section\">\n                            <h3>Preparation time</h3> {{ this.recipe.preparation_time }}\n                        </div>\n                    </div>\n                    <div class=\"section\">\n                        <div class=\"recipe-card-section\">\n                            <h3>Servings</h3> {{ this.recipe.servings }}\n                        </div>\n                    </div>\n                    <button class=\"submit-button\" @click=\"togglePopup\">Close</button>\n                </div>\n            </div>\n        </div>\n        </div>\n        <div v-else>\n            <div @click=\"goToLogin\" class=\"recipe-title\">\n                <span v-if=\"type === 'rate'\">\n                  <h2>{{ this.recipe.title }}</h2><h3>{{ 'Rating: ' + this.CurrRating }}</h3>\n                </span>\n                <span v-else>\n                  <h2>{{ this.recipe.title }}</h2><h3>{{ this.recipe.creation_date }}</h3>\n                </span>\n            </div>\n        </div>\n\n    </div>\n</template>\n\n\n<script>\n\nimport axios from 'axios';\nimport '../assets/styles/appStyles.css';\n\nexport default {\n    props: {\n        recipe: Object,\n        username: String,\n        logged: Boolean,\n        type: String\n    },\n    data() {\n        return {\n            showPopup: false,\n            rating: 0, // Valoración inicial\n            NumRatings: this.recipe.rating_amount,\n            CurrRating: this.recipe.rating_average,\n            recipe_id: this.recipe.id,\n            hoveredStar: 0,\n        };\n    },\n    methods: {\n        togglePopup() {\n            this.showPopup = !this.showPopup;\n        },\n        goToLogin() {\n            alert('Log in to see the recipe!');\n            this.$router.push('/login');\n        },\n        parseText(listString) {\n            const sinCorchetes = listString.replace(/\\[|\\]/g, '');\n            const sinComillasSimples = sinCorchetes.replace(/'/g, '');\n            const arrayIngredientes = sinComillasSimples.split(',');\n            return arrayIngredientes;\n        },\n        setRating(rating) {\n            this.rating = rating;\n            this.addRating();\n            this.getRating();\n        },\n        hoverStars(star) {\n            this.hoveredStar = star;\n        },\n        resetStars() {\n            this.hoveredStar = 0;\n        },\n        getRating() {\n            // Axios para recibir los ratings\n            axios\n            axios.get(`recipes/getratings/${this.recipe_id}/`)\n                .then((response) => {\n                    if (response.status === 200) {\n                        const ratings = response.data;\n                        this.NumRatings = ratings.rating_amount;\n                        this.CurrRating = ratings.rating_average;\n                        console.log(response.data.recipes)\n                    }\n                })\n                .catch((error) => {\n                    console.error(\"Error al obtener los ratings:\", error);\n                });\n        },\n\n        addRating() {\n            //axios para postear el rating de una receta\n            axios\n                .post(\"recipes/postratings/\", {\n                    user_id: this.username,\n                    recipe_id: this.recipe.id,\n                    rating: this.rating\n                })\n                .then((response) => {\n                    if (response.status === 200) {\n                        console.log(\"Rating added\");\n                        alert(\"Rating added.\");\n                        this.getRating();\n                    }\n                })\n                .catch((error) => {\n                    alert(error.response);\n                });\n        }\n    },\n};\n\n</script>\n\n<style scoped>\n.recipe-card {\n    cursor: pointer;\n    text-align: center;\n}\n\n.recipe-title {\n    cursor: pointer;\n    text-align: center;\n    border-radius: 4px;\n    background-color: #a51d1de7;\n    color: white;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    max-width: 250px;\n    padding: 10px;\n    margin-bottom: 10px; /* Añadido margen inferior */\n}\n\n.recipe-title:hover {\n    background-color: #ff5733;\n}\n\n.popup {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 999;\n    background: rgba(0, 0, 0, 0.8);\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.popup-content {\n    background-color: #FCE4A4;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    width: 100%;\n    max-height: 500px;\n    padding: 20px;\n    overflow-y: auto;\n    margin-top: 100px;\n}\n\n.section h2 {\n    font-size: 1.5rem;\n}\n\n.section h3 {\n    font-size: 1.3rem;\n    margin-bottom: 10px;\n    color: #d44d31; /* Color personalizado para los títulos de sección */\n}\n\n.section {\n    color: black;\n}\n\n.rating-stars span {\n    font-size: 1.5rem;\n    cursor: pointer;\n    color: #ccc;\n    margin-left: 5px;\n}\n\n.rating-stars span.filled {\n    color: #ffcc00;\n}\n\n.rating-stars span.hovered {\n    color: #ffcc00;\n}\n\n.hidden-stars {\n    display: none;\n}\n\n.recipe-header {\n    background-color: #FF5733;\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    padding: 10px;\n    border-radius: 5px;\n    margin-bottom: 10px; /* Añadido margen inferior */\n}\n\n.recipe-card-title {\n    border-radius: 5px;\n    width: 60%;\n    padding: 10px;\n    border: 2px solid #d44d31;\n    margin: 5px;\n}\n\n.recipe-card-section {\n    border-radius: 5px;\n    padding: 10px;\n    border: 2px solid #d44d31;\n    margin: 5px;\n}\n\n.recipe-card-rating {\n    border: 2px solid #d44d31;\n    border-radius: 5px;\n    padding: 10px;\n}\n\nh3 {\n    display: block;\n    font-size: 20px;\n    margin-block-start: 1em;\n    margin-block-end: 1em;\n    margin-inline-start: 0px;\n    margin-inline-end: 0px;\n    font-weight: bold;\n    color: white;\n}\n\n</style>"],"mappings":";AA4GA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAO,gCAAgC;AAEvC,eAAe;EACXC,KAAK,EAAE;IACHC,MAAM,EAAEC,MAAM;IACdC,QAAQ,EAAEC,MAAM;IAChBC,MAAM,EAAEC,OAAO;IACfC,IAAI,EAAEH;EACV,CAAC;EACDI,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,KAAK;MAChBC,MAAM,EAAE,CAAC;MAAE;MACXC,UAAU,EAAE,IAAI,CAACV,MAAM,CAACW,aAAa;MACrCC,UAAU,EAAE,IAAI,CAACZ,MAAM,CAACa,cAAc;MACtCC,SAAS,EAAE,IAAI,CAACd,MAAM,CAACe,EAAE;MACzBC,WAAW,EAAE;IACjB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,WAAWA,CAAA,EAAG;MACV,IAAI,CAACV,SAAQ,GAAI,CAAC,IAAI,CAACA,SAAS;IACpC,CAAC;IACDW,SAASA,CAAA,EAAG;MACRC,KAAK,CAAC,2BAA2B,CAAC;MAClC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC/B,CAAC;IACDC,SAASA,CAACC,UAAU,EAAE;MAClB,MAAMC,YAAW,GAAID,UAAU,CAACE,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;MACrD,MAAMC,kBAAiB,GAAIF,YAAY,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MACzD,MAAME,iBAAgB,GAAID,kBAAkB,CAACE,KAAK,CAAC,GAAG,CAAC;MACvD,OAAOD,iBAAiB;IAC5B,CAAC;IACDE,SAASA,CAACrB,MAAM,EAAE;MACd,IAAI,CAACA,MAAK,GAAIA,MAAM;MACpB,IAAI,CAACsB,SAAS,CAAC,CAAC;MAChB,IAAI,CAACC,SAAS,CAAC,CAAC;IACpB,CAAC;IACDC,UAAUA,CAACC,IAAI,EAAE;MACb,IAAI,CAAClB,WAAU,GAAIkB,IAAI;IAC3B,CAAC;IACDC,UAAUA,CAAA,EAAG;MACT,IAAI,CAACnB,WAAU,GAAI,CAAC;IACxB,CAAC;IACDgB,SAASA,CAAA,EAAG;MACR;MACAlC,KAAI;MACJA,KAAK,CAACsC,GAAG,CAAE,sBAAqB,IAAI,CAACtB,SAAU,GAAE,EAC5CuB,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAIA,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UACzB,MAAMC,OAAM,GAAIF,QAAQ,CAAC/B,IAAI;UAC7B,IAAI,CAACG,UAAS,GAAI8B,OAAO,CAAC7B,aAAa;UACvC,IAAI,CAACC,UAAS,GAAI4B,OAAO,CAAC3B,cAAc;UACxC4B,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC/B,IAAI,CAACoC,OAAO;QACrC;MACJ,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QACdJ,OAAO,CAACI,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACzD,CAAC,CAAC;IACV,CAAC;IAEDd,SAASA,CAAA,EAAG;MACR;MACAjC,KAAI,CACCgD,IAAI,CAAC,sBAAsB,EAAE;QAC1BC,OAAO,EAAE,IAAI,CAAC7C,QAAQ;QACtBY,SAAS,EAAE,IAAI,CAACd,MAAM,CAACe,EAAE;QACzBN,MAAM,EAAE,IAAI,CAACA;MACjB,CAAC,EACA4B,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAIA,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UACzBE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;UAC3BtB,KAAK,CAAC,eAAe,CAAC;UACtB,IAAI,CAACY,SAAS,CAAC,CAAC;QACpB;MACJ,CAAC,EACAY,KAAK,CAAEC,KAAK,IAAK;QACdzB,KAAK,CAACyB,KAAK,CAACP,QAAQ,CAAC;MACzB,CAAC,CAAC;IACV;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}