{"ast":null,"code":"import AppCardRecipe from '@/components/AppCardRecipe.vue';\nexport default {\n  components: {\n    AppCardRecipe\n  },\n  props: {\n    recipes: Array,\n    visibleRecipes: Number,\n    username: String,\n    logged: Boolean,\n    type: String\n  },\n  data() {\n    return {\n      currentCardIndex: 0\n    };\n  },\n  computed: {\n    displayedRecipes() {\n      const startIndex = this.currentCardIndex;\n      const endIndex = startIndex + this.visibleRecipes;\n      return this.recipes.slice(startIndex, endIndex);\n    },\n    isAtBeginning() {\n      return this.currentCardIndex === 0;\n    },\n    isAtEnd() {\n      return this.currentCardIndex + this.visibleRecipes >= this.recipes.length;\n    }\n  },\n  methods: {\n    moveCarousel(step) {\n      const newIndex = this.currentCardIndex + step;\n      if (newIndex >= 0 && newIndex <= this.recipes.length - this.visibleRecipes) {\n        this.currentCardIndex = newIndex;\n      }\n    }\n  }\n};","map":{"version":3,"names":["AppCardRecipe","components","props","recipes","Array","visibleRecipes","Number","username","String","logged","Boolean","type","data","currentCardIndex","computed","displayedRecipes","startIndex","endIndex","slice","isAtBeginning","isAtEnd","length","methods","moveCarousel","step","newIndex"],"sources":["C:\\Users\\Usuario\\Desktop\\Adri\\UB\\4º\\1º\\Ingeniería de Software\\Practica\\RecipeSharing\\frontend\\src\\components\\AppCardCarousel.vue"],"sourcesContent":["<template>\n    <div class=\"card-carousel\">\n        <div class=\"carousel-container\">\n            <button @click=\"moveCarousel(-1)\" class=\"arrow-button left-arrow\"\n                    :class=\"{ 'disabled-button': isAtBeginning }\">◄\n            </button>\n            <AppCardRecipe\n                    v-for=\"(recipe, index) in displayedRecipes\"\n                    :key=\"index\"\n                    :type=\"this.type\"\n                    :recipe=\"recipe\"\n                    :logged=\"this.logged\"\n                    :username=\"username\"\n            ></AppCardRecipe>\n            <button @click=\"moveCarousel(1)\" class=\"arrow-button right-arrow\" :class=\"{ 'disabled-button': isAtEnd }\">\n                ►\n            </button>\n        </div>\n    </div>\n</template>\n\n\n<script>\nimport AppCardRecipe from '@/components/AppCardRecipe.vue';\n\nexport default {\n    components: {AppCardRecipe},\n    props: {\n        recipes: Array,\n        visibleRecipes: Number,\n        username: String,\n        logged: Boolean,\n        type: String,\n    },\n    data() {\n        return {\n            currentCardIndex: 0,\n        };\n    },\n    computed: {\n        displayedRecipes() {\n            const startIndex = this.currentCardIndex;\n            const endIndex = startIndex + this.visibleRecipes;\n            return this.recipes.slice(startIndex, endIndex);\n        },\n        isAtBeginning() {\n            return this.currentCardIndex === 0;\n        },\n        isAtEnd() {\n            return this.currentCardIndex + this.visibleRecipes >= this.recipes.length;\n        },\n    },\n    methods: {\n        moveCarousel(step) {\n            const newIndex = this.currentCardIndex + step;\n            if (newIndex >= 0 && newIndex <= this.recipes.length - this.visibleRecipes) {\n                this.currentCardIndex = newIndex;\n            }\n        },\n    },\n};\n</script>\n\n\n<style scoped>\n\n.card-carousel {\n    text-align: center;\n}\n\n.carousel-container {\n    display: flex;\n    flex-wrap: nowrap;\n    overflow-x: auto;\n    gap: 20px;\n    padding: 40px;\n    border-radius: 4px;\n    height: auto;\n    width: 100%;\n    margin: 15px auto 10px;\n    max-width: 100%;\n}\n\n.carousel-item {\n    flex: 0 0 auto;\n}\n\nbutton {\n    margin-top: 10px;\n    background-color: #ff5733;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    padding: 10px;\n    cursor: pointer;\n}\n\n.arrow-button:hover {\n    background-color: #ff8844; /* Cambia el color al pasar el cursor por encima */\n}\n\n.disabled-button {\n    background-color: #ccc; /* Color de fondo gris para botones deshabilitados */\n    pointer-events: none; /* Deshabilitar interacción con el botón */\n    cursor: not-allowed; /* Cambiar el cursor a \"no permitido\" */\n}\n\n</style>\n"],"mappings":"AAuBA,OAAOA,aAAY,MAAO,gCAAgC;AAE1D,eAAe;EACXC,UAAU,EAAE;IAACD;EAAa,CAAC;EAC3BE,KAAK,EAAE;IACHC,OAAO,EAAEC,KAAK;IACdC,cAAc,EAAEC,MAAM;IACtBC,QAAQ,EAAEC,MAAM;IAChBC,MAAM,EAAEC,OAAO;IACfC,IAAI,EAAEH;EACV,CAAC;EACDI,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,gBAAgB,EAAE;IACtB,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IACNC,gBAAgBA,CAAA,EAAG;MACf,MAAMC,UAAS,GAAI,IAAI,CAACH,gBAAgB;MACxC,MAAMI,QAAO,GAAID,UAAS,GAAI,IAAI,CAACX,cAAc;MACjD,OAAO,IAAI,CAACF,OAAO,CAACe,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;IACnD,CAAC;IACDE,aAAaA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACN,gBAAe,KAAM,CAAC;IACtC,CAAC;IACDO,OAAOA,CAAA,EAAG;MACN,OAAO,IAAI,CAACP,gBAAe,GAAI,IAAI,CAACR,cAAa,IAAK,IAAI,CAACF,OAAO,CAACkB,MAAM;IAC7E;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,YAAYA,CAACC,IAAI,EAAE;MACf,MAAMC,QAAO,GAAI,IAAI,CAACZ,gBAAe,GAAIW,IAAI;MAC7C,IAAIC,QAAO,IAAK,KAAKA,QAAO,IAAK,IAAI,CAACtB,OAAO,CAACkB,MAAK,GAAI,IAAI,CAAChB,cAAc,EAAE;QACxE,IAAI,CAACQ,gBAAe,GAAIY,QAAQ;MACpC;IACJ;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}