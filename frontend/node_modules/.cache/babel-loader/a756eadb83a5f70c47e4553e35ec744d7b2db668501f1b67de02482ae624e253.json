{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-86ab1514\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"mainContainer\",\n  style: {\n    \"color\": \"black\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"form-background\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"mainTitle\",\n  style: {\n    \"color\": \"#ff5733\"\n  }\n}, [/*#__PURE__*/_createCommentVNode(\" Title for the registration form with custom color \"), /*#__PURE__*/_createElementVNode(\"h1\", null, \"Register\")], -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\"\n}, \"Username:\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"note\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"The username must be between 8 and 16 characters.\")], -1 /* HOISTED */));\nconst _hoisted_7 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email:\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"note\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Only the following domains are valid: example.com, yourdomain.com, gmail.com, hotmail.com\")], -1 /* HOISTED */));\nconst _hoisted_11 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_12 = {\n  class: \"form-group\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"Password:\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"note\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"The password must be at least 8 characters long, contain one uppercase letter, one lowercase letter, one number, and one symbol.\")], -1 /* HOISTED */));\nconst _hoisted_15 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_16 = {\n  class: \"form-group\"\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"confirmPassword\"\n}, \"Confirm Password:\", -1 /* HOISTED */));\nconst _hoisted_18 = {\n  class: \"password-strength\"\n};\nconst _hoisted_19 = {\n  class: \"password-strength-meter\"\n};\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"secondaryContainer\",\n  style: {\n    \"background-color\": \"white\"\n  }\n}, [/*#__PURE__*/_createCommentVNode(\" Register button to submit the form \"), /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"submit-button\"\n}, \"Register\")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppTextField = _resolveComponent(\"AppTextField\");\n  const _component_AppTextFieldPassword = _resolveComponent(\"AppTextFieldPassword\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.register && $options.register(...args), [\"prevent\"])),\n    class: \"form\"\n  }, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createCommentVNode(\" AppTextField component for username input \"), _createVNode(_component_AppTextField, {\n    defaultMessage: $data.defaultMessageUsername,\n    \"onUpdate:textValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    onInput: $options.checkUsername\n  }, null, 8 /* PROPS */, [\"defaultMessage\", \"onInput\"]), _hoisted_6, $data.usernameError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"This username is not valid\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createCommentVNode(\" AppTextField component for email input \"), _createVNode(_component_AppTextField, {\n    defaultMessage: $data.defaultMessageEmail,\n    \"onUpdate:textValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    onInput: $options.checkEmail\n  }, null, 8 /* PROPS */, [\"defaultMessage\", \"onInput\"]), _hoisted_10, $data.emailError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_11, \"This email extension is not valid\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _createCommentVNode(\" AppTextFieldPassword component for password input \"), _createVNode(_component_AppTextFieldPassword, {\n    defaultMessage: $data.defaultMessagePassword,\n    \"onUpdate:textValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    onInput: $options.checkPassword\n  }, null, 8 /* PROPS */, [\"defaultMessage\", \"onInput\"]), _hoisted_14, $data.passwordError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_15, \"This password is not valid\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _createCommentVNode(\" AppTextFieldPassword component for password confirmation input \"), _createVNode(_component_AppTextFieldPassword, {\n    defaultMessage: $data.defaultMessagePasswordCheck,\n    \"onUpdate:textValue\": _cache[3] || (_cache[3] = $event => $data.confirmPassword = $event)\n  }, null, 8 /* PROPS */, [\"defaultMessage\"])]), _createElementVNode(\"div\", _hoisted_18, [_createTextVNode(\" Password Strength: \"), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", {\n    class: \"password-strength-bar\",\n    style: _normalizeStyle({\n      width: $data.passwordStrength + '%'\n    })\n  }, null, 4 /* STYLE */)])]), _createElementVNode(\"p\", null, [_createCommentVNode(\" Router link to navigate to the login page if the user already has an account \"), _createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Already have an account? Log in\")]),\n    _: 1 /* STABLE */\n  })]), _hoisted_20], 32 /* HYDRATE_EVENTS */)])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","_createCommentVNode","for","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","register","_hoisted_4","_hoisted_5","_createVNode","_component_AppTextField","defaultMessage","$data","defaultMessageUsername","$event","username","onInput","checkUsername","_hoisted_6","usernameError","_hoisted_7","_hoisted_8","_hoisted_9","defaultMessageEmail","email","checkEmail","_hoisted_10","emailError","_hoisted_11","_hoisted_12","_hoisted_13","_component_AppTextFieldPassword","defaultMessagePassword","password","checkPassword","_hoisted_14","passwordError","_hoisted_15","_hoisted_16","_hoisted_17","defaultMessagePasswordCheck","confirmPassword","_hoisted_18","_hoisted_19","_normalizeStyle","width","passwordStrength","_component_router_link","to","_hoisted_20"],"sources":["C:\\Users\\Usuario\\Desktop\\Adri\\UB\\4º\\1º\\Ingeniería de Software\\Practica\\RecipeSharing\\frontend\\src\\pages\\RegisterPage.vue"],"sourcesContent":["<template>\n    <div class=\"mainContainer\" style=\"color: black\">\n        <div class=\"form-background\">\n            <div class=\"mainTitle\" style=\"color: #ff5733\">\n                <!-- Title for the registration form with custom color -->\n                <h1>Register</h1>\n            </div>\n            <form @submit.prevent=\"register\" class=\"form\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Username:</label>\n                    <!-- AppTextField component for username input -->\n                    <AppTextField\n                            :defaultMessage=\"defaultMessageUsername\"\n                            @update:textValue=\"username = $event\"\n                            @input=\"checkUsername\"\n                    />\n                    <div class=\"note\">\n                        <p>The username must be between 8 and 16 characters.</p>\n                    </div>\n                    <p v-if=\"usernameError\" class=\"error\">This username is not valid</p>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"email\">Email:</label>\n                    <!-- AppTextField component for email input -->\n                    <AppTextField\n                            :defaultMessage=\"defaultMessageEmail\"\n                            @update:textValue=\"email = $event\"\n                            @input=\"checkEmail\"\n                    />\n                    <div class=\"note\">\n                        <p>Only the following domains are valid: example.com, yourdomain.com, gmail.com, hotmail.com</p>\n                    </div>\n                    <p v-if=\"emailError\" class=\"error\">This email extension is not valid</p>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password:</label>\n                    <!-- AppTextFieldPassword component for password input -->\n                    <AppTextFieldPassword\n                            :defaultMessage=\"defaultMessagePassword\"\n                            @update:textValue=\"password = $event\"\n                            @input=\"checkPassword\"\n                    />\n                    <div class=\"note\">\n                        <p>The password must be at least 8 characters long, contain one uppercase letter, one lowercase\n                            letter, one number, and one symbol.</p>\n                    </div>\n                    <p v-if=\"passwordError\" class=\"error\">This password is not valid</p>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"confirmPassword\">Confirm Password:</label>\n                    <!-- AppTextFieldPassword component for password confirmation input -->\n                    <AppTextFieldPassword\n                            :defaultMessage=\"defaultMessagePasswordCheck\"\n                            @update:textValue=\"confirmPassword = $event\"\n                    />\n                </div>\n                <div class=\"password-strength\">\n                    Password Strength:\n                    <div class=\"password-strength-meter\">\n                        <div class=\"password-strength-bar\" :style=\"{ width: passwordStrength + '%' }\"></div>\n                    </div>\n                </div>\n                <p>\n                    <!-- Router link to navigate to the login page if the user already has an account -->\n                    <router-link to=\"/login\">Already have an account? Log in</router-link>\n                </p>\n                <div class=\"secondaryContainer\" style=\"background-color: white\">\n                    <!-- Register button to submit the form -->\n                    <button type=\"submit\" class=\"submit-button\">Register</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\n\nimport '../assets/styles/appStyles.css'\nimport AppTextField from '@/components/AppTextField.vue'\nimport AppTextFieldPassword from '@/components/AppTextFieldPassword.vue'\nimport axios from 'axios'\n\nexport default {\n    name: 'RegisterPage',\n    components: {AppTextField, AppTextFieldPassword},\n    data() {\n        return {\n            // Data properties for username, email, password, and more\n            username: '',\n            usernameError: false,\n            email: '',\n            emailError: false,\n            password: '',\n            passwordError: false,\n            confirmPassword: '',\n            passwordStrength: 0,\n            defaultMessageUsername: 'Introduce your username',\n            defaultMessageEmail: 'Introduce your email',\n            defaultMessagePassword: 'Introduce your password',\n            defaultMessagePasswordCheck: 'Introduce your password again'\n        }\n    },\n    methods: {\n        checkUsername() {\n            this.usernameError = this.username.length < 8 || this.username.length > 16\n        },\n        checkEmail() {\n            // Check the validity of the entered email\n            const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/\n            if (!emailRegex.test(this.email)) {\n                this.emailError = true\n            } else {\n                // Define valid email extensions\n                const validEmailExtensions = ['example.com', 'yourdomain.com', 'gmail.com', 'hotmail.com']\n                // Split the email to get the domain part\n                const emailParts = this.email.split('@')\n                const emailExtension = emailParts[1]\n                // Check if the email extension is valid\n                this.emailError = !validEmailExtensions.includes(emailExtension)\n            }\n        },\n        checkPassword() {\n            // Check the validity and strength of the entered password\n            const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{8,}$/\n            this.passwordError = !passwordRegex.test(this.password)\n\n            // Calculate password strength\n            let strength = 0\n            if (this.password.length >= 8) {\n                strength++\n            }\n            if (/[a-z]/.test(this.password) && /[A-Z]/.test(this.password)) {\n                strength++\n            }\n            if (/\\d/.test(this.password)) {\n                strength++\n            }\n            if (/\\W|_/.test(this.password)) {\n                strength++\n            }\n            this.passwordStrength = (strength / 4) * 100\n        },\n        clearForm() {\n            this.username = ''\n            this.email = ''\n            this.password = ''\n            this.confirmPassword = ''\n        },\n        async register() {\n            // Check if passwords match\n            if (this.username.length === 0 || this.email.length === 0 ||\n                this.password.length === 0 || this.confirmPassword.length === 0) {\n                alert('Complete the form')\n                return\n            }\n            if (this.password !== this.confirmPassword) {\n                alert('Passwords do not match')\n                return\n            }\n            try {\n                // Send a registration request to the server\n                let response = await axios.post('http://localhost:8000/user/', {\n                    username: this.username,\n                    email: this.email,\n                    password: this.password\n                }, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                })\n                // Check the HTTP status code in the response\n                if (response.status === 200) {\n                    // Registration successful, you can handle success here\n                    console.log('Registration successful')\n                    alert('Registration successful')\n                    this.$router.push('/')\n                }\n            } catch (error) {\n                if (error.response) {\n                    // Handle network errors\n                    if (error.response.status === 400) {\n                        // Handle client-side validation errors\n                        alert(error.response.data.error)\n                    } else if (error.response.status === 500) {\n                        // Handle server errors\n                        alert('An error occurred while registering.')\n                    } else {\n                        // Handle other status codes\n                        alert('Unexpected error')\n                    }\n                } else {\n                    // Handle other unexpected errors\n                    alert('An error occurred while registering.')\n                }\n            }\n        }\n    }\n}\n\n</script>\n\n<style scoped>\n\n.password-strength {\n    font-weight: bold;\n}\n\n.password-strength-meter {\n    height: 10px;\n    background-color: #ccc;\n    border-radius: 5px;\n    margin-top: 10px;\n    overflow: hidden;\n}\n\n.password-strength-bar {\n    height: 100%;\n    background-color: #4CAF50;\n    width: 0;\n    transition: width 0.3s;\n}\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}