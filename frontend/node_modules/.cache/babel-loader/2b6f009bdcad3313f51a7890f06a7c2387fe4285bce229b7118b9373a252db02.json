{"ast":null,"code":"export default {\n  name: \"AppTextFieldPassword.vue\",\n  props: {\n    defaultMessage: String\n  },\n  data() {\n    return {\n      message: this.defaultMessage,\n      isSaved: false,\n      isPasswordVisible: false,\n      clearedOnce: false\n    };\n  },\n  computed: {\n    inputStyle() {\n      return {\n        backgroundColor: this.isSaved ? \"#eea94d\" : \"#FCE4A4\",\n        color: this.isSaved ? \"white\" : \"black\",\n        padding: \"10px\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"5px\",\n        width: \"100%\",\n        minWidth: \"300px\",\n        display: \"block\",\n        margin: \"0 auto\",\n        marginTop: \"10px\"\n      };\n    }\n  },\n  methods: {\n    saveMessage() {\n      this.isSaved = true;\n      this.$refs.messageInput.blur();\n    },\n    clearDefaultMessage() {\n      if (!this.clearedOnce) {\n        this.clearedOnce = true;\n        this.message = '';\n      }\n    },\n    togglePasswordVisibility() {\n      this.isPasswordVisible = !this.isPasswordVisible;\n    },\n    updateTextFieldValue() {\n      this.$emit('update:textValue', this.message);\n    },\n    handleEnterKey(event) {\n      if (event.key === 'Enter') {\n        event.preventDefault(); // Evita el comportamiento predeterminado (envío del formulario) al presionar Enter\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","defaultMessage","String","data","message","isSaved","isPasswordVisible","clearedOnce","computed","inputStyle","backgroundColor","color","padding","border","borderRadius","width","minWidth","display","margin","marginTop","methods","saveMessage","$refs","messageInput","blur","clearDefaultMessage","togglePasswordVisibility","updateTextFieldValue","$emit","handleEnterKey","event","key","preventDefault"],"sources":["C:\\Users\\Usuario\\Desktop\\Adri\\UB\\4º\\1º\\Ingeniería de Software\\Practica\\RecipeSharing\\frontend\\src\\components\\AppTextFieldPassword.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"text-field-container\">\n            <input\n                    v-model=\"message\"\n                    @blur=\"saveMessage\"\n                    @focus=\"clearDefaultMessage\"\n                    ref=\"messageInput\"\n                    @input=\"updateTextFieldValue\"\n                    :style=\"inputStyle\"\n                    :type=\"isPasswordVisible ? 'text' : 'password'\"\n                    @keydown=\"handleEnterKey\"\n            >\n        </div>\n        <button @click.prevent=\"togglePasswordVisibility\" class=\"password-toggle-button\">\n            <i :class=\"isPasswordVisible ? 'far fa-eye' : 'far fa-eye-slash'\"></i>\n        </button>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    name: \"AppTextFieldPassword.vue\",\n    props: {\n        defaultMessage: String,\n    },\n    data() {\n        return {\n            message: this.defaultMessage,\n            isSaved: false,\n            isPasswordVisible: false,\n            clearedOnce: false,\n        };\n    },\n    computed: {\n        inputStyle() {\n            return {\n                backgroundColor: this.isSaved ? \"#eea94d\" : \"#FCE4A4\",\n                color: this.isSaved ? \"white\" : \"black\",\n                padding: \"10px\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"5px\",\n                width: \"100%\",\n                minWidth: \"300px\",\n                display: \"block\",\n                margin: \"0 auto\",\n                marginTop: \"10px\",\n            };\n        },\n    },\n    methods: {\n        saveMessage() {\n            this.isSaved = true;\n            this.$refs.messageInput.blur();\n        },\n        clearDefaultMessage() {\n            if (!this.clearedOnce) {\n                this.clearedOnce = true;\n                this.message = '';\n            }\n        },\n        togglePasswordVisibility() {\n            this.isPasswordVisible = !this.isPasswordVisible;\n        },\n        updateTextFieldValue() {\n            this.$emit('update:textValue', this.message);\n        },\n        handleEnterKey(event) {\n            if (event.key === 'Enter') {\n                event.preventDefault(); // Evita el comportamiento predeterminado (envío del formulario) al presionar Enter\n            }\n        },\n    },\n};\n</script>\n\n<style>\n\n.text-field-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.password-toggle-button {\n    background-color: #FCE4A4;\n    border: 1px;\n    border-radius: 5px;\n    margin-top: 5px;\n}\n\n</style>"],"mappings":"AAsBA,eAAe;EACXA,IAAI,EAAE,0BAA0B;EAChCC,KAAK,EAAE;IACHC,cAAc,EAAEC;EACpB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,IAAI,CAACH,cAAc;MAC5BI,OAAO,EAAE,KAAK;MACdC,iBAAiB,EAAE,KAAK;MACxBC,WAAW,EAAE;IACjB,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IACNC,UAAUA,CAAA,EAAG;MACT,OAAO;QACHC,eAAe,EAAE,IAAI,CAACL,OAAM,GAAI,SAAQ,GAAI,SAAS;QACrDM,KAAK,EAAE,IAAI,CAACN,OAAM,GAAI,OAAM,GAAI,OAAO;QACvCO,OAAO,EAAE,MAAM;QACfC,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAE,KAAK;QACnBC,KAAK,EAAE,MAAM;QACbC,QAAQ,EAAE,OAAO;QACjBC,OAAO,EAAE,OAAO;QAChBC,MAAM,EAAE,QAAQ;QAChBC,SAAS,EAAE;MACf,CAAC;IACL;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,WAAWA,CAAA,EAAG;MACV,IAAI,CAAChB,OAAM,GAAI,IAAI;MACnB,IAAI,CAACiB,KAAK,CAACC,YAAY,CAACC,IAAI,CAAC,CAAC;IAClC,CAAC;IACDC,mBAAmBA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAAClB,WAAW,EAAE;QACnB,IAAI,CAACA,WAAU,GAAI,IAAI;QACvB,IAAI,CAACH,OAAM,GAAI,EAAE;MACrB;IACJ,CAAC;IACDsB,wBAAwBA,CAAA,EAAG;MACvB,IAAI,CAACpB,iBAAgB,GAAI,CAAC,IAAI,CAACA,iBAAiB;IACpD,CAAC;IACDqB,oBAAoBA,CAAA,EAAG;MACnB,IAAI,CAACC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAACxB,OAAO,CAAC;IAChD,CAAC;IACDyB,cAAcA,CAACC,KAAK,EAAE;MAClB,IAAIA,KAAK,CAACC,GAAE,KAAM,OAAO,EAAE;QACvBD,KAAK,CAACE,cAAc,CAAC,CAAC,EAAE;MAC5B;IACJ;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}