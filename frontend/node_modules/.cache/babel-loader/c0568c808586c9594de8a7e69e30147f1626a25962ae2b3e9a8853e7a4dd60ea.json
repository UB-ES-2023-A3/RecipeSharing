{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AppTextField from '@/components/AppTextField.vue';\nimport DropdownSelect from '@/components/AppDropdownSelect.vue';\nimport TextArea from '@/components/AppTextArea.vue';\nimport axios from 'axios';\nimport ingredientsData from '@/assets/lists/Ingredients.json';\nimport allergensData from '@/assets/lists/Allergens.json';\nimport typesData from '@/assets/lists/Types.json';\nimport prepTimeData from '@/assets/lists/prepTime.json';\nexport default {\n  components: {\n    AppTextField,\n    DropdownSelect,\n    TextArea\n  },\n  data() {\n    return {\n      username: '',\n      recipeName: '',\n      selectedIngredients: '',\n      instructions: '',\n      selectedRecipeType: '',\n      selectedAllergens: '',\n      preparationTime: '',\n      servings: '',\n      defaultMessageRecipe: 'Introduce the name of your recipe',\n      defaultMessageInstructions: 'Introduce the instructions',\n      showErrorMessage: false,\n      errorField: null,\n      errorMessage: '',\n      errorMessages: {\n        recipeName: 'Please enter the recipe name.',\n        selectedIngredients: 'Please select at least one ingredient.',\n        selectedAllergens: 'Please select at least one allergen.',\n        instructions: 'Please provide instructions for the recipe.',\n        selectedRecipeType: 'Please select a recipe type.',\n        preparationTime: 'Please select the preparation time.',\n        servings: 'Please enter the number of servings.'\n      },\n      ingredientsList: ingredientsData,\n      allergensList: allergensData,\n      recipeTypes: typesData,\n      preparationTimeOptions: prepTimeData\n    };\n  },\n  computed: {\n    allSelectedIngredients() {\n      return [...new Set(this.selectedIngredients)];\n    },\n    allSelectedAllergens() {\n      return [...new Set(this.selectedAllergens)];\n    }\n  },\n  methods: {\n    checkForm() {\n      this.showErrorMessage = false;\n      this.errorField = null;\n      if (!this.recipeName) {\n        this.errorField = 'recipeName';\n      } else if (this.selectedIngredients.length === 0) {\n        this.errorField = 'selectedIngredients';\n      } else if (!this.instructions) {\n        this.errorField = 'instructions';\n      } else if (!this.selectedRecipeType) {\n        this.errorField = 'selectedRecipeType';\n      } else if (this.selectedAllergens.length === 0) {\n        this.errorField = 'selectedAllergens';\n      } else if (this.preparationTime === '') {\n        this.errorField = 'preparationTime';\n      } else if (this.servings === '') {\n        this.errorField = 'servings';\n      }\n      if (this.errorField) {\n        this.showErrorMessage = true;\n        this.errorMessage = this.errorMessages[this.errorField];\n      }\n    },\n    handleTextFieldValueUpdate(value) {\n      this.recipeName = value;\n    },\n    handleIngredientsUpdate(value) {\n      this.selectedIngredients = value;\n    },\n    handleInstructionsUpdate(value) {\n      this.instructions = value;\n    },\n    handleTypesUpdate(value) {\n      this.selectedRecipeType = value;\n    },\n    handleAllergensUpdate(value) {\n      this.selectedAllergens = value;\n    },\n    handleTimeUpdate(value) {\n      this.preparationTime = parseInt(value);\n    },\n    addRecipe() {\n      this.checkForm();\n      if (this.showErrorMessage) {\n        return;\n      }\n      axios.post('/addRecipe/', {\n        name: this.recipeName,\n        ingredients: this.allSelectedIngredients,\n        instructions: this.instructions,\n        type: this.selectedRecipeType,\n        allergens: this.allSelectedAllergens,\n        preparationTime: this.preparationTime,\n        servings: this.servings,\n        username_id: this.username\n      }).then(response => {\n        if (response.status === 200) {\n          console.log('Recipe added');\n          alert('Recipe added.');\n          this.$router.push('/');\n        }\n      }).catch(error => {\n        alert(error.response);\n      });\n    }\n  },\n  created() {\n    this.username = localStorage.getItem('username');\n  }\n};","map":{"version":3,"names":["AppTextField","DropdownSelect","TextArea","axios","ingredientsData","allergensData","typesData","prepTimeData","components","data","username","recipeName","selectedIngredients","instructions","selectedRecipeType","selectedAllergens","preparationTime","servings","defaultMessageRecipe","defaultMessageInstructions","showErrorMessage","errorField","errorMessage","errorMessages","ingredientsList","allergensList","recipeTypes","preparationTimeOptions","computed","allSelectedIngredients","Set","allSelectedAllergens","methods","checkForm","length","handleTextFieldValueUpdate","value","handleIngredientsUpdate","handleInstructionsUpdate","handleTypesUpdate","handleAllergensUpdate","handleTimeUpdate","parseInt","addRecipe","post","name","ingredients","type","allergens","username_id","then","response","status","console","log","alert","$router","push","catch","error","created","localStorage","getItem"],"sources":["C:\\Users\\Usuario\\Desktop\\Adri\\UB\\4º\\1º\\Ingeniería de Software\\Practica\\RecipeSharing\\frontend\\src\\pages\\AddRecipePage.vue"],"sourcesContent":["<template>\n    <div class=\"mainContainer\" style=\"color: black\">\n        <div class=\"form-background\">\n            <div class=\"mainTitle\" style=\"color: #ff5733\">\n                <h1>Add Recipe</h1>\n            </div>\n            <form @submit.prevent=\"addRecipe\" class=\"form\">\n                <!-- Recipe Name Field -->\n                <div class=\"form-group\">\n                    <label for=\"recipeName\">Name of the recipe:</label>\n                    <!-- AppTextField component for recipe name -->\n                    <AppTextField\n                            :defaultMessage=\"defaultMessageRecipe\"\n                            v-model=\"recipeName\"\n                            @update:textValue=\"handleTextFieldValueUpdate\"\n                    />\n                </div>\n\n                <!-- Ingredients Field -->\n                <div class=\"form-group\">\n                    <label for=\"ingredients\">Ingredients:</label>\n                    <!-- DropdownSelect component for selecting ingredients -->\n                    <DropdownSelect\n                            :options=\"ingredientsList\"\n                            v-model=\"selectedIngredients\"\n                            label=\"an ingredient\"\n                            groupTitle=\"Selected Ingredients\"\n                            @update:selectedValue=\"handleIngredientsUpdate\"\n                            :choose=\"true\"\n                    />\n                </div>\n\n                <!-- Instructions Field -->\n                <div class=\"form-group\">\n                    <label for=\"instructions\">Instructions:</label>\n                    <!-- TextArea component for providing recipe instructions -->\n                    <TextArea\n                            :defaultMessage=\"defaultMessageInstructions\"\n                            v-model=\"instructions\"\n                            @update:textValue=\"handleInstructionsUpdate\"\n                    ></TextArea>\n                </div>\n\n                <!-- Recipe Type Field -->\n                <div class=\"form-group\">\n                    <label for=\"recipeType\">Type of recipe:</label>\n                    <!-- DropdownSelect component for selecting the recipe type -->\n                    <DropdownSelect\n                            :options=\"recipeTypes\"\n                            v-model=\"selectedRecipeType\"\n                            label=\"Recipe type\"\n                            groupTitle=\"Selected Type\"\n                            @update:selectedValue=\"handleTypesUpdate\"\n                            :choose=\"true\"\n                    />\n                </div>\n\n                <!-- Allergens Field -->\n                <div class=\"form-group\">\n                    <label for=\"allergens\">Allergens:</label>\n                    <!-- DropdownSelect component for selecting allergens -->\n                    <DropdownSelect\n                            :options=\"allergensList\"\n                            v-model=\"selectedAllergens\"\n                            label=\"an allergen\"\n                            groupTitle=\"Selected Allergens\"\n                            @update:selectedValue=\"handleAllergensUpdate\"\n                            :choose=\"true\"\n                    />\n                </div>\n\n                <!-- Preparation Time Field -->\n                <div class=\"form-group\">\n                    <label for=\"preparationTime\">Preparation time:</label>\n                    <!-- DropdownSelect component for selecting preparation time -->\n                    <DropdownSelect\n                            :options=\"preparationTimeOptions\"\n                            v-model=\"preparationTime\"\n                            label=\"preparation time\"\n                            groupTitle=\"Selected Preparation Time\"\n                            @update:selectedValue=\"handleTimeUpdate\"\n                            :choose=\"false\"\n                    />\n                </div>\n\n                <!-- Servings Field -->\n                <div class=\"form-group\">\n                    <label for=\"servings\">Servings:</label>\n                    <input type=\"number\" id=\"servings\" v-model=\"servings\" class=\"full-width-dropdown\" min=\"1\" max=\"10\">\n                </div>\n\n                <!-- Error Message Display -->\n                <div class=\"error-message\" v-if=\"showErrorMessage\">\n                    {{ errorMessage }}\n                </div>\n\n                <!-- Submit Button -->\n                <div class=\"secondaryContainer\" style=\"background-color: white\">\n                    <button type=\"submit\" class=\"submit-button\">Add Recipe</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\n\nimport AppTextField from '@/components/AppTextField.vue'\nimport DropdownSelect from '@/components/AppDropdownSelect.vue'\nimport TextArea from '@/components/AppTextArea.vue'\nimport axios from 'axios'\nimport ingredientsData from '@/assets/lists/Ingredients.json'\nimport allergensData from '@/assets/lists/Allergens.json'\nimport typesData from '@/assets/lists/Types.json'\nimport prepTimeData from '@/assets/lists/prepTime.json'\n\nexport default {\n    components: {AppTextField, DropdownSelect, TextArea},\n    data() {\n        return {\n            username: '',\n            recipeName: '',\n            selectedIngredients: '',\n            instructions: '',\n            selectedRecipeType: '',\n            selectedAllergens: '',\n            preparationTime: '',\n            servings: '',\n            defaultMessageRecipe: 'Introduce the name of your recipe',\n            defaultMessageInstructions: 'Introduce the instructions',\n            showErrorMessage: false,\n            errorField: null,\n            errorMessage: '',\n            errorMessages: {\n                recipeName: 'Please enter the recipe name.',\n                selectedIngredients: 'Please select at least one ingredient.',\n                selectedAllergens: 'Please select at least one allergen.',\n                instructions: 'Please provide instructions for the recipe.',\n                selectedRecipeType: 'Please select a recipe type.',\n                preparationTime: 'Please select the preparation time.',\n                servings: 'Please enter the number of servings.'\n            },\n            ingredientsList: ingredientsData,\n            allergensList: allergensData,\n            recipeTypes: typesData,\n            preparationTimeOptions: prepTimeData\n        }\n    },\n    computed: {\n        allSelectedIngredients() {\n            return [...new Set(this.selectedIngredients)]\n        },\n        allSelectedAllergens() {\n            return [...new Set(this.selectedAllergens)]\n        }\n    },\n    methods: {\n        checkForm() {\n            this.showErrorMessage = false\n            this.errorField = null\n\n            if (!this.recipeName) {\n                this.errorField = 'recipeName'\n            } else if (this.selectedIngredients.length === 0) {\n                this.errorField = 'selectedIngredients'\n            } else if (!this.instructions) {\n                this.errorField = 'instructions'\n            } else if (!this.selectedRecipeType) {\n                this.errorField = 'selectedRecipeType'\n            } else if (this.selectedAllergens.length === 0) {\n                this.errorField = 'selectedAllergens'\n            } else if (this.preparationTime === '') {\n                this.errorField = 'preparationTime'\n            } else if (this.servings === '') {\n                this.errorField = 'servings'\n            }\n\n            if (this.errorField) {\n                this.showErrorMessage = true\n                this.errorMessage = this.errorMessages[this.errorField]\n            }\n        },\n        handleTextFieldValueUpdate(value) {\n            this.recipeName = value\n        },\n        handleIngredientsUpdate(value) {\n            this.selectedIngredients = value\n        },\n        handleInstructionsUpdate(value) {\n            this.instructions = value\n        },\n        handleTypesUpdate(value) {\n            this.selectedRecipeType = value\n        },\n        handleAllergensUpdate(value) {\n            this.selectedAllergens = value\n        },\n        handleTimeUpdate(value) {\n            this.preparationTime = parseInt(value)\n        },\n        addRecipe() {\n            this.checkForm()\n\n            if (this.showErrorMessage) {\n                return\n            }\n\n            axios\n                .post('/addRecipe/', {\n                    name: this.recipeName,\n                    ingredients: this.allSelectedIngredients,\n                    instructions: this.instructions,\n                    type: this.selectedRecipeType,\n                    allergens: this.allSelectedAllergens,\n                    preparationTime: this.preparationTime,\n                    servings: this.servings,\n                    username_id: this.username\n                })\n                .then((response) => {\n                    if (response.status === 200) {\n                        console.log('Recipe added')\n                        alert('Recipe added.')\n                        this.$router.push('/')\n                    }\n                })\n                .catch((error) => {\n                    alert(error.response)\n                })\n        }\n    },\n    created() {\n        this.username = localStorage.getItem('username')\n    }\n}\n\n</script>\n\n<style scoped>\n.selected-box h2 {\n    font-size: 16px;\n    margin-top: 0;\n}\n\n.full-width-dropdown {\n    margin-top: 10px;\n    width: 100%;\n    resize: vertical;\n}\n\n.ingredient-list li,\n.allergen-list li {\n    margin: 0;\n    padding: 0;\n}\n\ninput {\n    margin-top: 10px;\n}\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}