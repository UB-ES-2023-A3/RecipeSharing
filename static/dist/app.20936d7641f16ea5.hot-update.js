"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(typeof self !== 'undefined' ? self : this)["webpackHotUpdatefrontend"]("app",{

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/pages/RecipePageRework.vue?vue&type=script&lang=js":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/pages/RecipePageRework.vue?vue&type=script&lang=js ***!
  \*********************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"./node_modules/axios/lib/axios.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: \"RecipePageRework\",\n  methods: {\n    data() {\n      return {\n        showPopup: false,\n        rating: 0,\n        // Valoración inicial\n        NumRatings: 0,\n        CurrRating: 0,\n        recipe_id: 0,\n        hoveredStar: 0,\n        username: null,\n        recipe: null,\n        profileInfo: null,\n        isFavorited: false\n      };\n    },\n    methods: {\n      closeRecipe() {\n        this.$router.push('/');\n      },\n      goToLogin() {\n        alert('Log in to see the recipe!');\n        this.$router.push('/login');\n      },\n      parseText(listString) {\n        const sinCorchetes = listString.replace(/\\[|\\]/g, '');\n        const sinComillasSimples = sinCorchetes.replace(/'/g, '');\n        const arrayIngredientes = sinComillasSimples.split(',');\n        return arrayIngredientes;\n      },\n      setRating(rating) {\n        this.rating = rating;\n        this.addRating();\n        this.getRating();\n      },\n      hoverStars(star) {\n        this.hoveredStar = star;\n      },\n      resetStars() {\n        this.hoveredStar = 0;\n      },\n      getRating() {\n        // Axios para recibir los ratings\n        axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(`recipes/getratings/${this.recipe_id}/`).then(response => {\n          if (response.status === 200) {\n            const ratings = response.data;\n            this.NumRatings = ratings.rating_amount;\n            this.CurrRating = ratings.rating_average;\n            console.log(response.data.recipes);\n          }\n        }).catch(error => {\n          console.error(\"Error al obtener los ratings:\", error);\n        });\n      },\n      addRating() {\n        //axios para postear el rating de una receta\n        axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(\"recipesPostRatings/\", {\n          user_id: this.username,\n          recipe_id: this.recipe.id,\n          rating: this.rating,\n          review_type: \"rate\"\n        }).then(response => {\n          if (response.status === 200) {\n            console.log(\"Rating added\");\n            alert(\"Rating added.\");\n            this.getRecipeInformation();\n          }\n        }).catch(error => {\n          alert(error.response);\n        });\n      },\n      getRecipeInformation() {\n        // Axios para recibir las recetas\n        axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(`recipe/${this.recipe_id}/`).then(response => {\n          if (response.status === 200) {\n            const info = response.data.recipe;\n            this.recipe = info;\n            console.log(this.recipe);\n          }\n        }).catch(error => {\n          console.error(\"Error al obtener la información de la receta:\", error);\n        });\n      },\n      addToFavorites() {\n        // Lógica para agregar o quitar de favoritos\n        this.isFavorited = !this.isFavorited;\n        axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(\"recipesAddFavorites/\", {\n          user_id: this.username,\n          recipe_id: this.recipe.id\n        }).then(response => {\n          if (response.status === 200) {\n            console.log(\"Recipe updated\");\n            this.isFavorited = this.recipe_id in this.profileInfo.list_favorite_recipes;\n            this.getRecipeInformation();\n            this.getUserInformation();\n            alert(\"List of favorites updated\");\n          }\n        }).catch(error => {\n          alert(error.response);\n        });\n      },\n      getUserInformation() {\n        // Axios para recibir lla información del usuario\n        axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(`user/${this.username}/`).then(response => {\n          if (response.status === 200) {\n            const info = response.data.user;\n            this.profileInfo = info;\n            console.log(response.data.user);\n            this.checkFavorite();\n          }\n        }).catch(error => {\n          console.error(\"Error al obtener las información del usuario:\", error);\n        });\n      },\n      checkFavorite() {\n        this.isFavorited = this.recipe_id in this.profileInfo.list_favorite_recipes;\n      }\n    },\n    created() {\n      this.recipeId = this.$route.params.id;\n      alert(this.recipeId);\n      alert(\"HOLA\");\n      this.getRecipeInformation();\n      this.getUserInformation();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/pages/RecipePageRework.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[3]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/pages/RecipePageRework.vue?vue&type=template&id=ce3a90f6&scoped=true":
/*!*************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[3]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/pages/RecipePageRework.vue?vue&type=template&id=ce3a90f6&scoped=true ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   render: function() { return /* binding */ render; }\n/* harmony export */ });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"h1\", null, \"HOLA\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[3]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/pages/RecipePageRework.vue?vue&type=template&id=ce3a90f6&scoped=true\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ !function() {
/******/ 	__webpack_require__.h = function() { return "cfea42db6edfdab6"; }
/******/ }();
/******/ 
/******/ }
);