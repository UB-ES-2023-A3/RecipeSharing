"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(typeof self !== 'undefined' ? self : this)["webpackHotUpdatefrontend"]("app",{

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/pages/RecipePageRework.vue?vue&type=script&lang=js":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/pages/RecipePageRework.vue?vue&type=script&lang=js ***!
  \*********************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.push.js */ \"./node_modules/core-js/modules/es.array.push.js\");\n/* harmony import */ var core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_push_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"../node_modules/axios/lib/axios.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: \"RecipePageRework\",\n  data() {\n    return {\n      showPopup: false,\n      rating: 0,\n      // Valoración inicial\n      NumRatings: 0,\n      CurrRating: 0,\n      hoveredStar: 0,\n      username: null,\n      recipe: null,\n      profileInfo: null,\n      isFavorited: false,\n      recipeId: 0,\n      newComment: '',\n      comments_updated: this.comments\n    };\n  },\n  methods: {\n    closeRecipe() {\n      this.$router.push('/');\n    },\n    goToLogin() {\n      alert('Log in to see the recipe!');\n      this.$router.push('/login');\n    },\n    parseText(listString) {\n      const sinCorchetes = listString.replace(/\\[|\\]/g, '');\n      const sinComillasSimples = sinCorchetes.replace(/'/g, '');\n      const arrayIngredientes = sinComillasSimples.split(',');\n      return arrayIngredientes;\n    },\n    setRating(rating) {\n      this.rating = rating;\n      this.addRating();\n      this.getRating();\n    },\n    hoverStars(star) {\n      this.hoveredStar = star;\n    },\n    resetStars() {\n      this.hoveredStar = 0;\n    },\n    getRating() {\n      // Axios para recibir los ratings\n      axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(`getRatings/`).then(response => {\n        if (response.status === 200) {\n          const ratings = response.data;\n          this.NumRatings = ratings.rating_amount;\n          this.CurrRating = ratings.rating_average;\n          console.log(response.data.recipes);\n        }\n      }).catch(error => {\n        console.error(\"Error al obtener los ratings:\", error);\n      });\n    },\n    addRating() {\n      //axios para postear el rating de una receta\n      axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(\"postRatings/\", {\n        user_id: this.username,\n        recipe_id: this.recipe.id,\n        rating: this.rating,\n        review_type: \"rate\"\n      }).then(response => {\n        if (response.status === 200) {\n          console.log(\"Rating added\");\n          alert(\"Rating added.\");\n          this.getRecipeInformation();\n        }\n      }).catch(error => {\n        alert(error.response);\n      });\n    },\n    getRecipeInformation() {\n      // Axios para recibir las recetas\n      axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(`/recipe/${this.recipeId}/`).then(response => {\n        if (response.status === 200) {\n          this.recipe = response.data.recipe;\n        }\n      }).catch(error => {\n        console.error(\"Error al obtener la información de la receta:\", error);\n      });\n    },\n    addToFavorites() {\n      // Lógica para agregar o quitar de favoritos\n      this.isFavorited = !this.isFavorited;\n      axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(\"/recipes/postFavorites/\", {\n        user_id: this.username,\n        recipe_id: this.recipe.id\n      }).then(response => {\n        if (response.status === 200) {\n          console.log(\"Recipe updated\");\n          console.log(response);\n          this.isFavorited = this.recipeId in this.profileInfo.list_favorite_recipes;\n          this.getUserInformation();\n          this.getRecipeInformation();\n          alert(\"List of favorites updated\");\n        }\n      }).catch(error => {\n        alert(error.response);\n      });\n    },\n    getUserInformation() {\n      // Axios para recibir lla información del usuario\n      axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(`/user/${this.username}/`).then(response => {\n        if (response.status === 200) {\n          const info = response.data.user;\n          this.profileInfo = info;\n          console.log(response.data.user);\n          this.checkFavorite();\n        }\n      }).catch(error => {\n        console.error(\"Error al obtener las información del usuario:\", error);\n      });\n    },\n    checkFavorite() {\n      this.isFavorited = this.recipeId in this.profileInfo.list_favorite_recipes;\n    },\n    createDate() {\n      // Crear el objeto comment con la fecha actual y otros datos\n      const currentDate = new Date();\n      const day = currentDate.getDate().toString().padStart(2, '0');\n      const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n      const year = currentDate.getFullYear().toString();\n      const hours = currentDate.getHours().toString().padStart(2, '0');\n      const minutes = currentDate.getMinutes().toString().padStart(2, '0');\n      const formattedDate = `${day}/${month}/${year} ${hours}:${minutes}`;\n      return formattedDate;\n    },\n    addComment() {\n      if (this.checkComment()) {\n        alert(\"No comment written\");\n        return;\n      }\n      const comment = {\n        username: this.username,\n        review: this.newComment,\n        date: this.createDate()\n      };\n      axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(\"postRatings/\", {\n        user_id: this.username,\n        recipe_id: this.recipeId,\n        comment: comment,\n        review_type: \"comment\"\n      }).then(response => {\n        if (response.status === 200) {\n          console.log(\"Rating added\");\n          alert(\"Review added.\");\n          this.newComment = '';\n          this.comments_updated = response.data.comments_list;\n          this.getRecipeInformation();\n        }\n      }).catch(error => {\n        alert(error.response);\n      });\n    },\n    checkComment() {\n      return this.newComment == '';\n    }\n  },\n  async created() {\n    this.recipeId = this.$route.params.id;\n    this.getRecipeInformation();\n    this.username = localStorage.getItem('username');\n    this.getUserInformation();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/pages/RecipePageRework.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[3]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/pages/RecipePageRework.vue?vue&type=template&id=ce3a90f6&scoped=true":
/*!*************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[3]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/pages/RecipePageRework.vue?vue&type=template&id=ce3a90f6&scoped=true ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   render: function() { return /* binding */ render; }\n/* harmony export */ });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.runtime.esm-bundler.js\");\n\nconst _withScopeId = n => ((0,vue__WEBPACK_IMPORTED_MODULE_0__.pushScopeId)(\"data-v-ce3a90f6\"), n = n(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.popScopeId)(), n);\nconst _hoisted_1 = {\n  class: \"recipeMainContainer\"\n};\nconst _hoisted_2 = {\n  class: \"recipeContainer\"\n};\nconst _hoisted_3 = {\n  class: \"recipeTitleImageRatingFavContainer\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", {\n  class: \"recipeImageContainer\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"recipeTitleContainer\"\n};\nconst _hoisted_6 = {\n  class: \"recipeRatingFavContainer\"\n};\nconst _hoisted_7 = {\n  class: \"recipeRatingContainer\"\n};\nconst _hoisted_8 = {\n  class: \"recipeRatingStars\"\n};\nconst _hoisted_9 = [\"onClick\", \"onMouseover\"];\nconst _hoisted_10 = {\n  class: \"recipeFavContainer\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"far fa-heart heart-icon\"\n};\nconst _hoisted_12 = {\n  key: 1,\n  class: \"fas fa-heart heart-icon active-heart\"\n};\nconst _hoisted_13 = /*#__PURE__*/(0,vue__WEBPACK_IMPORTED_MODULE_0__.createStaticVNode)(\"<div class=\\\"recipeInfoContainer\\\" data-v-ce3a90f6><div class=\\\"recipeInfoLeftContainer\\\" data-v-ce3a90f6><div class=\\\"recipeIngredientsContainer\\\" data-v-ce3a90f6></div><div class=\\\"recipePrepTimeContainer\\\" data-v-ce3a90f6></div><div class=\\\"recipeServingsContainer\\\" data-v-ce3a90f6></div></div><div class=\\\"recipeInfoRightContainer\\\" data-v-ce3a90f6><div class=\\\"recipeInstructionsContainer\\\" data-v-ce3a90f6></div></div><div class=\\\"recipeCommentsContainer\\\" data-v-ce3a90f6></div></div>\", 1);\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", _hoisted_1, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_2, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_3, [_hoisted_4, (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_5, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)(this.recipe.title), 1 /* TEXT */), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_6, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_7, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_8, [((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(vue__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,vue__WEBPACK_IMPORTED_MODULE_0__.renderList)([1, 2, 3, 4, 5], star => {\n    return (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", {\n      key: star,\n      onClick: $event => $options.setRating(star),\n      onMouseover: $event => $options.hoverStars(star),\n      onMouseout: _cache[0] || (_cache[0] = (...args) => $options.resetStars && $options.resetStars(...args)),\n      class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)({\n        'filled': star <= $data.rating,\n        'hovered': star <= $data.hoveredStar,\n        'hidden-stars': $data.username === this.recipe.username_id\n      })\n    }, \" ★ \", 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_9);\n  }), 64 /* STABLE_FRAGMENT */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"p\", null, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)(this.recipe.rating_average + \"(\" + this.recipe.rating_amount + \")\"), 1 /* TEXT */)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_10, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addToFavorites && $options.addToFavorites(...args)),\n    class: (0,vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass)([{\n      'active': $data.isFavorited\n    }, \"heart-btn\"])\n  }, [!$data.isFavorited ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"i\", _hoisted_11)) : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true), $data.isFavorited ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"i\", _hoisted_12)) : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true)], 2 /* CLASS */)])])]), _hoisted_13])]);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[3]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./src/pages/RecipePageRework.vue?vue&type=template&id=ce3a90f6&scoped=true\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ !function() {
/******/ 	__webpack_require__.h = function() { return "ef056ae72cdd7eec"; }
/******/ }();
/******/ 
/******/ }
);